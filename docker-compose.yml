services:
  redis:
    image: redis:7-alpine
    container_name: excalidraw-redis
    networks:
      - dokploy-network
    restart: on-failure
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly no
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  excalidraw:
    build:
      context: .
      args:
        - NODE_ENV=production
        - VITE_APP_STORAGE_BACKEND_URL=https://draw.aimamin.com/api/v2
        - VITE_APP_WS_SERVER_URL=https://draw.aimamin.com
    container_name: excalidraw
    ports:
      - "3003:80"
    networks:
      - dokploy-network
    restart: on-failure
    stdin_open: true
    environment:
      - VITE_APP_ENABLE_TRACKING=false
      - VITE_APP_DISABLE_FIREBASE=true
    volumes:
      - ./:/opt/node_app/app:delegated
      - ./package.json:/opt/node_app/package.json
      - ./yarn.lock:/opt/node_app/yarn.lock
      - notused:/opt/node_app/app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      excalidraw-storage:
        condition: service_started
      excalidraw-room:
        condition: service_started
    labels:
      - traefik.enable=true
      - traefik.docker.network=dokploy-network
      - traefik.http.routers.excalidraw-app-kfeve3-22-web.rule=Host(`draw.aimamin.com`)
      - traefik.http.routers.excalidraw-app-kfeve3-22-web.entrypoints=web
      - traefik.http.routers.excalidraw-app-kfeve3-22-web.middlewares=redirect-to-https@file
      - traefik.http.routers.excalidraw-app-kfeve3-22-web.service=excalidraw-app-kfeve3-22-websecure
      - traefik.http.routers.excalidraw-app-kfeve3-22-websecure.rule=Host(`draw.aimamin.com`)
      - traefik.http.routers.excalidraw-app-kfeve3-22-websecure.entrypoints=websecure
      - traefik.http.routers.excalidraw-app-kfeve3-22-websecure.tls.certresolver=letsencrypt
      - traefik.http.services.excalidraw-app-kfeve3-22-websecure.loadbalancer.server.port=80

  excalidraw-storage:
    image: kiliandeca/excalidraw-storage-backend:latest
    platform: linux/amd64
    container_name: excalidraw-storage
    ports:
      - "9080:8080"
    networks:
      - dokploy-network
    restart: on-failure
    environment:
      - PORT=8080
      - GLOBAL_PREFIX=/api/v2
      - STORAGE_URI=sqlite:///app/data/excalidraw.db
      - LOG_LEVEL=warn
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.docker.network=dokploy-network
      - traefik.http.routers.excalidraw-storage.rule=Host(`draw.aimamin.com`) && PathPrefix(`/api/v2`)
      - traefik.http.routers.excalidraw-storage.entrypoints=websecure
      - traefik.http.routers.excalidraw-storage.tls.certresolver=letsencrypt
      - traefik.http.services.excalidraw-storage.loadbalancer.server.port=8080

  excalidraw-room:
    image: excalidraw/excalidraw-room:latest
    platform: linux/amd64
    container_name: excalidraw-room
    ports:
      - "3002:3002"  # Add this line
    networks:
      - dokploy-network
    restart: on-failure
    environment:
      - PORT=3002
      - REDIS_URL=redis://redis:6379
      - "REDIS_KEY_PREFIX=excalidraw:"
      - NODE_ENV=production
      - WS_HEARTBEAT_INTERVAL=25000
      - WS_HEARTBEAT_TIMEOUT=60000
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.docker.network=dokploy-network
      - traefik.http.routers.excalidraw-room-ws.rule=Host(`draw.aimamin.com`) && PathPrefix(`/socket.io`)
      - traefik.http.routers.excalidraw-room-ws.entrypoints=websecure
      - traefik.http.routers.excalidraw-room-ws.tls.certresolver=letsencrypt
      - traefik.http.routers.excalidraw-room-ws.priority=100
      - traefik.http.routers.excalidraw-room-ws.service=excalidraw-room-service 
      - traefik.http.services.excalidraw-room-service.loadbalancer.server.port=3002

volumes:
  notused:
  redis_data:

networks:
  dokploy-network:
    external: true